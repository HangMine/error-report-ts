{"version":3,"sources":["webpack:///./src/views/supplier-backend/components/HTable/utils.ts","webpack:///./src/views/supplier-backend/components/HTable/ColWidth.ts"],"names":["_toString","Object","prototype","toString","toRawType","value","call","slice","getInitValue","type","Date","getInitObj","originObj","preValueObj","obj","entries","key","hasOwnProperty","deepCopy","cache","hit","filter","c","original","copy","Array","isArray","push","keys","forEach","getPx","num","val","textarea","document","createElement","body","appendChild","select","execCommand","parentNode","removeChild","getColumnKeys","column","children","helper","arr","item","defaultOptions","LAST_WIDTH","COL_MAX_WIDTH","SIGNLE_WIDTH","DOUBLE_WIDTH","SORT_ICON_WIDTH","CEIL_PADDING_WIDTH","WIDTH_MORE_THAN_MAX","ColWidth","cols","rows","footer","options","this","setOptions","getWidCols","resultColumns","columns","_rows","_footer","minWid","wid","headerWid","getLength","title","contentWid","calcWid","getContentMaxWidth","footerWid","getFooterMaxWidth","addWid","Math","max","className","min","col","length","lengthArr","map","maxLength","round","handleString","name","getArrayLength","lengths","matchs","match","doubleLength","singleLength"],"mappings":"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","file":"js/chunk-33c9cbcc.cec3e012.js","sourcesContent":["import { Obj, Column, Columns } from './type';\n\nconst _toString = Object.prototype.toString;\nexport const toRawType = (value:any) => _toString.call(value).slice(8, -1);\n\n// 根据类型设置默认值\nexport const getInitValue = (value:any) => {\n  const type = toRawType(value);\n  switch (type) {\n    case 'Array':\n      return [];\n    case 'Object':\n      return {};\n    case 'Date':\n      return new Date();\n    case 'Number':\n      return 0;\n    case 'Null':\n    case 'Undefined':\n    case 'Function':\n      return value;\n    default:\n      return '';\n  }\n};\n\nexport const getInitObj = (originObj:Obj = {}, preValueObj:Obj = {}) => {\n  const obj:Obj = {};\n  // eslint-disable-next-line no-restricted-syntax\n  for (const [key, value] of Object.entries(originObj)) {\n    // eslint-disable-next-line no-prototype-builtins\n    obj[key] = preValueObj.hasOwnProperty(key) ? preValueObj[key] : getInitValue(value);\n  }\n  return obj;\n};\n\n/**\n * @des: 深复制(es6，不添加原型版本)，需考虑循环引用对象的兼容处理:https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\n * @param {Any} data 需要复制的数据\n * @param {Array} cache 保存已经遍历过的对象，是为了处理循环引用对象\n * @return {Any} 复制后的数据\n */\nexport const deepCopy = (obj:any, cache:{original:Obj, copy:Obj}[] = []) => {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n  const hit = cache.filter(c => c.original === obj)[0];\n  if (hit) {\n    return hit.copy;\n  }\n  const copy:Obj = Array.isArray(obj) ? [] : {};\n  cache.push({\n    original: obj,\n    copy,\n  });\n  Object.keys(obj).forEach(key => {\n    copy[key] = deepCopy(obj[key], cache);\n  });\n  return copy;\n};\n\n/**\n * @description:\n * @param {Number | String} num\n * @return\n */\nexport const getPx = (num:number|string) => (toRawType(num) === 'Number' ? `${num}px` : num);\n\n/**\n * @description: 复制内容到剪贴版\n * @param {String} val 需要复制的内容\n * @return:\n */\nexport const copy = (val:string) => {\n  // 使用textarea才可以换行\n  const textarea = document.createElement('textarea');\n  textarea.value = val;\n  document.body.appendChild(textarea);\n  textarea.select();\n  document.execCommand('Copy');\n  return textarea.parentNode?.removeChild(textarea);\n};\n\nexport const getColumnKeys = (column:Column) => {\n  if (!column.children) return [column.key];\n\n  const keys:string[] = [];\n  const helper = (arr:Columns) => {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const item of arr) {\n      if (item.children) helper(item.children);\n      keys.push(item.key);\n    }\n  };\n  helper(column.children);\n  return keys;\n};\n","/*\n * 对每个表头设置wid属性\n * 每个column可传入:\n * minWid || minWidth:最小宽度\n * width:固定宽度\n * addWid:在计算的宽度上加减的宽度\n * calcWid: 任何类型，交给colWidth计算\n */\nimport { deepCopy, toRawType } from './utils';\nimport { Obj } from './type';\n\nconst defaultOptions = {\n  // 意外的值宽度\n  LAST_WIDTH: 100,\n  // 每列最大宽度\n  COL_MAX_WIDTH: 400,\n  // 单字符宽度\n  SIGNLE_WIDTH: 9,\n  // 双字符宽度\n  DOUBLE_WIDTH: 18,\n  // 排序图标宽度,\n  SORT_ICON_WIDTH: 10,\n  // elementUI表格单元格padding(需要看table的size)\n  CEIL_PADDING_WIDTH: 40,\n  // 当宽度超出最大宽度时，增加该class\n  WIDTH_MORE_THAN_MAX: 'wid-more-than-max',\n};\n\nclass ColWidth {\n  options = defaultOptions;\n\n  constructor(cols = [], rows = [], footer = {}, options:typeof defaultOptions) {\n    if (options) this.setOptions(options);\n    return this.getWidCols(cols, rows, footer);\n  }\n  setOptions(options:typeof defaultOptions) {\n    this.options = { ...defaultOptions, ...options };\n  }\n  getWidCols(cols:Obj[] = [], rows:Obj[] = [], footer:Obj = {}) {\n    const {\n      SORT_ICON_WIDTH, CEIL_PADDING_WIDTH, COL_MAX_WIDTH, WIDTH_MORE_THAN_MAX,\n    } = this.options;\n\n    const resultColumns = deepCopy(cols);\n\n    // 递归兼容多级表头\n    const helper = (columns:Obj[], _rows:Obj[], _footer:Obj) => {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const item of columns) {\n        if (item.children) {\n          helper(item.children, _rows, _footer);\n        } else {\n          // eslint-disable-next-line no-continue\n          if (item.minWid || item.wid) continue;\n          const headerWid = this.getLength(item.title) + SORT_ICON_WIDTH;\n          const contentWid = item.calcWid ? this.getLength(item.calcWid) : this.getContentMaxWidth(_rows, item.key);\n          const footerWid = this.getFooterMaxWidth(_footer, item.key);\n          const addWid = item.addWid || 0;\n          const calcWid = Math.max(headerWid, contentWid, footerWid) + CEIL_PADDING_WIDTH + addWid; // addWid为自定义需要要增加的宽度\n          if (calcWid > COL_MAX_WIDTH) {\n            item.className = WIDTH_MORE_THAN_MAX;\n          }\n          item.minWid = Math.min(calcWid, COL_MAX_WIDTH);\n        }\n      }\n    };\n\n    helper(resultColumns, rows, footer);\n    return resultColumns;\n  }\n  getContentMaxWidth(rows:Obj[], col:string) {\n    if (!rows || !rows.length) {\n      return 0;\n    }\n    const lengthArr = rows.map(item => this.getLength(item[col]));\n    const maxLength = Math.max(...lengthArr);\n    return maxLength;\n  }\n  getFooterMaxWidth(footer:Obj, col:string) {\n    return footer && Object.keys(footer).length ? this.getLength(footer[col]) : 0;\n  }\n\n  getLength(val:any):number {\n    const { SIGNLE_WIDTH, LAST_WIDTH } = this.options;\n    switch (toRawType(val)) {\n      case 'Number':\n        return Math.round(`${val}`.length * SIGNLE_WIDTH);\n      case 'String':\n        return this.handleString(val);\n      case 'Object':\n        if (!val || val.name === 0) return 0; // 值为null或者'0'时\n        if (val.name) {\n          return this.handleString(`${val.name}`);\n        }\n        return LAST_WIDTH;\n      case 'Array':\n        return this.getArrayLength(val);\n      default:\n        return val ? LAST_WIDTH : 0; // 固定宽度100，值为falsy则为0\n    }\n  }\n  // 获取数组长度，在这里递归\n  getArrayLength(arr = []) {\n    const lengths = arr.map(item => this.getLength(item));\n    return Math.max(...lengths);\n  }\n  // eslint-disable-next-line class-methods-use-this\n  handleString(val:string) {\n    const { SIGNLE_WIDTH, DOUBLE_WIDTH } = this.options;\n    // eslint-disable-next-line no-control-regex\n    const matchs = val.match(/[^\\x00-\\xff]/g);\n    const doubleLength = (matchs && matchs.length) || 0;\n    const singleLength = val.length - doubleLength;\n    return doubleLength * DOUBLE_WIDTH + Math.round(singleLength * SIGNLE_WIDTH);\n  }\n}\n\nexport default ColWidth;\n"],"sourceRoot":""}