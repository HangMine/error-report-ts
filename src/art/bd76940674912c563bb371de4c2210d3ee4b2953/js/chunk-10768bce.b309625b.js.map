{"version":3,"sources":["webpack:///./src/mixins/form-validation.js","webpack:///./src/views/login/login/components/ChangePasswordWrapper.vue?f51a","webpack:///./src/views/login/login/components/ChangePasswordWrapper.vue?1382","webpack:///./src/views/login/login/components/ChangePasswordWrapper.vue?08e5","webpack:///./src/views/login/login/components/ChangePasswordWrapper.vue","webpack:///./src/utils/validators/valid-password.ts","webpack:///./src/views/login/login/components/ChangePasswordWrapper.vue?ac53","webpack:///./src/views/profile/info/components/form/FormChangePassword.vue?395c","webpack:///src/views/profile/info/components/form/FormChangePassword.vue","webpack:///./src/views/profile/info/components/form/FormChangePassword.vue?d86b","webpack:///./src/views/profile/info/components/form/FormChangePassword.vue","webpack:///./src/utils/validators/rules-validation.js"],"names":["mixinValidateForm","methods","validateForm","Object","keys","form","forEach","prop","trim","replace","validateFormFields","$refs","$emit","console","warn","Error","i18n","t","resetFields","this","mixinValidateFormField","validateFormField","field","value","validate","valid","invalidFields","mixinCheckPasswordAsPrevious","data","validatePasswordConfirm","rule","callback","pass","passwordConfirm","rules","validator","requirement","charLengthMini","handlePasswordChange","validateField","render","_vm","_h","$createElement","_c","_self","staticClass","ref","attrs","on","args","len","arguments","length","$act","handleValidateFormSuccess","concat","directives","name","rawName","expression","staticStyle","$event","_v","_s","$t","formChangePassword","staticRenderFns","components","FormChangePassword","props","account","type","String","dialogify","width","closeOnClickModal","closeOnPressEscape","showClose","title","isLoading","oldPass","$props","$attrs","axios","url","method","newPass","$errHandler","component","validPassword","min","max","e","test","hasNum","hasChar","hasUpperCase","hasLowerCase","score","reduce","total","v","_b","assign","labelPosition","labelWidth","model","$$v","$set","mixins","mounted","resetFileds","strLength","password","roleGenerator","validations","map","spaceTrim","pattern","message","trigger","required","selection","email","number","numberPositive","numberNatural","integerPositive","charTypeWithNormal","charTypeWithoutEmail","numberAndAlphabet","numAlphabetUnderscore","charLength","validator2ElemRule","checkPasswordRepeat","phone","mobilePhoneChina","charLengthRange","charLengthMax","charTypeNormal","charTypeNormal1","charTypeNotOnlyDigitOrLatin","charTypeDigitAndLatin","charTypeDigitOrLatin","charTypeDigitAndHyphen","key","charAt","toUpperCase","substr"],"mappings":"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","file":"js/chunk-10768bce.b309625b.js","sourcesContent":["import i18n from 'i18next';\nimport validator, { validateFormFields } from '@/utils/validators/rules-validation';\n\n// 校验表单是否通过校验\nexport const mixinValidateForm = {\n  methods: {\n    async validateForm() {\n      Object.keys(this.form).forEach((prop) => {\n        if (typeof this.form[prop] === 'string') {\n          // 去掉首尾空格\n          // 防止XSS攻击（html方面）\n          this.form[prop] = this.form[prop]\n            .trim()\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n        }\n      });\n\n      try {\n        await validateFormFields(this.$refs.form);\n        this.$emit('validate', this.form);\n        return this.form;\n      } catch (err) {\n        console.warn(err);\n        throw new Error(i18n.t('validator.form_val_fail'));\n      }\n    },\n    resetFields() {\n      this.$refs.form.resetFields();\n    },\n  },\n};\n\n// 校验表单中特定的field有没有通过校验；校验成功，返回其值\nexport const mixinValidateFormField = {\n  methods: {\n    validateFormField(field, value) {\n      this.$refs.form.validate((valid, invalidFields) => {\n        // 判断该属性是否在校验失败的field对象里面，如果校验通过则通知父组件\n        if (!invalidFields[field]) this.$emit('validate-field', { field, value });\n      });\n    },\n  },\n};\n\n// 校验再次输入的密码是否与上一次相同\nexport const mixinCheckPasswordAsPrevious = {\n  data() {\n    const validatePasswordConfirm = (rule, value, callback) => {\n      if (value !== this.form.pass) {\n        return callback(new Error(i18n.t('validator.same_as_prev')));\n      }\n      return callback();\n    };\n\n    return {\n      form: {\n        pass: '',\n        passwordConfirm: '',\n      },\n      rules: {\n        passwordConfirm: [\n          validator.requirement(),\n          validator.charLengthMini(6, 20),\n          { validator: validatePasswordConfirm },\n        ],\n      },\n    };\n  },\n  methods: {\n    // 当密码框输入变化时，要校验密码确认内容\n    // （此监听方法需添加到 password 上）\n    handlePasswordChange() {\n      if (this.form.passwordConfirm) this.$refs.form.validateField('passwordConfirm');\n    },\n  },\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"change-paddword-wrapper\"},[_c('form-change-password',{ref:\"formChangePassword\",staticClass:\"form\",attrs:{\"labelPosition\":\"left\",\"labelWidth\":\"180px\",\"size\":\"small\"},on:{\"validate\":function () {\n\tvar args = [], len = arguments.length;\n\twhile ( len-- ) args[ len ] = arguments[ len ];\n\n\treturn _vm.$act(_vm.handleValidateFormSuccess, [].concat( args ));\n}}}),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.isLoading),expression:\"isLoading\"}],staticClass:\"flex-justify-flex-end button-group\",staticStyle:{\"margin-top\":\"30px\"}},[_c('el-button',{on:{\"click\":function($event){return _vm.$emit('cancel')}}},[_vm._v(_vm._s(_vm.$t('public.dialog.cancel')))]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.$refs.formChangePassword.validateForm()}}},[_vm._v(\" \"+_vm._s(_vm.$t('public.dialog.confirm'))+\" \")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport FormChangePassword from '@/views/profile/info/components/form/FormChangePassword.vue';\nimport { axiosEncrypt } from '@/utils/axios';\nimport i18n from 'i18next';\n\n\nexport default {\n  components: { FormChangePassword },\n  props: {\n    account: {\n      type: String,\n    },\n  },\n  dialogify: {\n    props: {\n      width: '440px',\n      closeOnClickModal: false,\n      closeOnPressEscape: false,\n      showClose: false,\n      title: i18n.t('login.change_password'),\n    },\n  },\n  data() { return { isLoading: false }; },\n  methods: {\n    // 修改密码\n    async handleValidateFormSuccess({ oldPass, pass }: { oldPass: string, pass: string }) {\n      try {\n        if (!this.$props.account && !this.$attrs.account) throw new Error('请提供account字段');\n        this.isLoading = true;\n        await axiosEncrypt({\n          url: '/authcenter/user/password/update',\n          method: 'POST',\n          data: {\n            account: this.account || this.$attrs.account,\n            oldPass,\n            newPass: pass,\n          },\n        });\n        this.$emit('confirm');\n      } catch (err) {\n        this.$errHandler(err);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n  },\n};\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChangePasswordWrapper.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChangePasswordWrapper.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ChangePasswordWrapper.vue?vue&type=template&id=9bd35476&scoped=true&\"\nimport script from \"./ChangePasswordWrapper.vue?vue&type=script&lang=ts&\"\nexport * from \"./ChangePasswordWrapper.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ChangePasswordWrapper.vue?vue&type=style&index=0&id=9bd35476&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9bd35476\",\n  null\n  \n)\n\nexport default component.exports","import { i18n } from '@/i18n';\nimport strLength from '@/utils/validators/str-length';\n\nexport function validPassword(pass: string) {\n  // const reg = /^(?![0-9]+$)(?![a-zA-Z]+$).+$/;\n  // if (!reg.test(pass)) {\n  //   throw new Error(i18n.t('validator.not_only_digit_letter'));\n  // }\n  if (!pass) {\n    return;\n  }\n\n\n  // 1.长度为6-20个字符\n  // strLength(pass, { min: 6, max: 20 });\n  try {\n    strLength(pass, { min: 6, max: 20 });\n  } catch (e) {\n    throw new Error(i18n.t('validator.pass.char_len_between', { min: 6, max: 20 }));\n  }\n\n  // 2.只能输入可见的ASCII字符\n  // new Array(127 - 33).fill(0).map((v, i) => String.fromCharCode(i + 33)).join('')\n  // !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\n  // !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n  // 注意中间一部分需要转义: [\\] => [\\\\\\]\n  // if (/[^`~!@#$%^&*()_\\-+=<>?:\"{}|,./;'\\\\[\\]·~！@#￥%……&*（）——\\-+={}|《》？：“”【】、；‘'，。、A-Za-z0-9]/.test(pass)) {\n  if (/[^!\"#$%&'()*+,-./:;<=>?@[\\\\\\]^_`{|}~A-Za-z0-9]/.test(pass)) {\n    throw new Error(i18n.t('validator.pass.ascii_char_only'));\n  }\n\n  // 3.至少包含数字/字符/大写字母/小写字母中的三种\n  const hasNum = /\\d/.test(pass);\n  const hasChar = /[!\"#$%&'()*+,-./:;<=>?@[\\\\\\]^_`{|}~]/.test(pass);\n  const hasUpperCase = /[A-Z]/.test(pass);\n  const hasLowerCase = /[a-z]/.test(pass);\n  const score = [hasNum, hasChar, hasUpperCase, hasLowerCase].reduce(((total, v) => total + (v ? 1 : 0)), 0);\n  // console.log('score=====', score);\n  if (score < 3) {\n    throw new Error(i18n.t('validator.pass.choose_three'));\n  }\n}\n\nexport default validPassword;\n","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChangePasswordWrapper.vue?vue&type=style&index=0&id=9bd35476&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-form',_vm._b({ref:\"form\"},'el-form',Object.assign({}, {labelPosition: 'right',\n    labelWidth: '180px',\n    model: _vm.form,\n    rules: _vm.rules},\n    _vm.$attrs),false),[_c('el-form-item',{attrs:{\"label\":_vm.$t('profile.info.current_password') + ':',\"prop\":\"oldPass\",\"required\":\"\"}},[_c('el-input',{attrs:{\"clearable\":\"\"},model:{value:(_vm.form.oldPass),callback:function ($$v) {_vm.$set(_vm.form, \"oldPass\", $$v)},expression:\"form.oldPass\"}})],1),_c('el-form-item',{attrs:{\"label\":_vm.$t('profile.info.new_password') + ':',\"prop\":\"pass\",\"required\":\"\"}},[_c('el-input',{attrs:{\"clearable\":\"\"},model:{value:(_vm.form.pass),callback:function ($$v) {_vm.$set(_vm.form, \"pass\", $$v)},expression:\"form.pass\"}})],1),_c('el-form-item',{attrs:{\"label\":_vm.$t('profile.info.confirm_new_password') + ':',\"prop\":\"passwordConfirm\",\"required\":\"\"}},[_c('el-input',{attrs:{\"clearable\":\"\"},model:{value:(_vm.form.passwordConfirm),callback:function ($$v) {_vm.$set(_vm.form, \"passwordConfirm\", $$v)},expression:\"form.passwordConfirm\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <el-form\n    ref=\"form\" v-bind=\"{\n      labelPosition: 'right',\n      labelWidth: '180px',\n      model: form,\n      rules,\n      ...$attrs,\n    }\">\n\n    <el-form-item :label=\"$t('profile.info.current_password') + ':'\" prop=\"oldPass\" required>\n      <el-input v-model=\"form.oldPass\" clearable />\n    </el-form-item>\n\n    <el-form-item :label=\"$t('profile.info.new_password') + ':'\" prop=\"pass\" required>\n      <el-input v-model=\"form.pass\" clearable />\n    </el-form-item>\n\n    <el-form-item :label=\"$t('profile.info.confirm_new_password') + ':'\" prop=\"passwordConfirm\" required>\n      <el-input v-model=\"form.passwordConfirm\" clearable />\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nimport { mixinValidateForm, mixinCheckPasswordAsPrevious } from '@/mixins/form-validation';\n\nimport validator from '@/utils/validators/rules-validation';\nimport validPassword from '@/utils/validators/valid-password';\nimport validator2ElemRule from '@/utils/validators/utils/validator-to-elem-rule';\n\nexport default {\n  mixins: [mixinValidateForm, mixinCheckPasswordAsPrevious],\n  data() {\n    return {\n      form: {\n        oldPass: '',\n      },\n      rules: {\n        oldPass: validator.requirement(),\n        pass: [\n          validator.requirement(),\n          // ...validator.charLengthRange(6, 20),\n          // validator.charTypeNotOnlyDigitOrLatin(),\n          validator2ElemRule(validPassword),\n        ],\n      },\n    };\n  },\n  mounted() {\n    // for (let i = 1; i < 4; i++) {\n    //   this.$refs[`password${i}`].$el.firstElementChild.type = 'text';\n    //   this.$refs[`password${i}`].handlePasswordVisible();\n    // }\n  },\n  methods: {\n    resetFileds() {\n      this.$refs.form.resetFields();\n    },\n  },\n};\n</script>\n","import mod from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormChangePassword.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormChangePassword.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FormChangePassword.vue?vue&type=template&id=bd5df118&\"\nimport script from \"./FormChangePassword.vue?vue&type=script&lang=js&\"\nexport * from \"./FormChangePassword.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**\n * \\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\n * 请不要再在这个文件添加并且使用element-ui的校验器\n * 为了确保大家都已读，请在该备注尾部署名\n * /\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\n *\n * 校验器（validator）在后续的版本的定义将更改为\n * “一个不返回任何东西，只抛出错误的函数或异步函数”\n * 当前文件会被按情况废弃\n *\n * 【validator是什么】\n * 比如下面的一个校验器：\n * @example\n * // 第一个参数必须是校验的对象，第二参数是一个对象，用于校验的其他判断条件\n * function required(value) {\n *    // 如果已经填了，则return;\n *    if (value) return;\n *    // 否则抛出错误\n *    throw new Error('此值必填')\n * }\n *\n * 【在element-ui使用校验器】\n * 使用validator2ElemValidator、validator2ElemRule\n * @see {./index}\n * @example\n *\n * rules: {\n *    name: validator2ElemRule(required)\n * }\n *\n * 注意的是，由于validate.js的bug，rule并不能存在由两个validator2ElemRule转换的rule\n * 如需使用两个校验器\n *\n * rules: {\n *    name: validator2ElemRule([required, required2])\n * }\n *\n * 【校验器写在哪？】\n * 写在当前你正在看的文件所在文件夹底下，并在index.js import并export，\n * 尽量以一个完整归类的校验器集合或者单个校验器作为一个文件\n *\n * 【署名】\n * 浩锋 黄月成\n */\n\nimport i18n from 'i18next';\nimport strLength from './str-length';\nimport validateForm from './validate-form';\nimport validator2ElemRule from './utils/validator-to-elem-validator';\n/**\n * 校验form表单（校验不通过会返回校验不同的fields);\n * @param {DOM} form\n * @returns {Promise}\n */\nexport const validateFormFields = validateForm;\n\n\nexport const validator = {\n  // 校验字符串长度\n  strLength,\n  // 校验两次密码是否相同\n  passwordConfirm(passwordConfirm, {\n    password,\n  }) {\n    if (password === '') {\n      throw new Error(i18n.t('validator.not_empty'));\n    }\n    if (password !== passwordConfirm) {\n      throw new Error(i18n.t('validator.same_as_prev'));\n    }\n  },\n};\n\nconst roleGenerator = {\n\n  /**\n   * 用于多个条件规则校验，校验的顺序按传入参数的顺序\n   * @param {validations}\n   * @returns {Array} rules 规则的数组集合\n   */\n  rules(...validations) {\n    if (!validations.length) throw new Error('require at lest one parameter');\n\n    return validations.map(prop => this[prop]());\n  },\n\n  /* ============================= 字符相关 =============================== */\n\n  // 开头和结尾不能为空校验\n  spaceTrim: () => ({\n    pattern: /(^\\S.*\\S$)|^\\S$/,\n    message: i18n.t('validator.space_not_start_end'),\n  }),\n\n  // 内容不能为空\n  requirement(trigger) {\n    return {\n      trigger,\n      required: true,\n      message: i18n.t('validator.not_empty'),\n    };\n  },\n  // 至少选择其中一个\n  selection() {\n    return {\n      required: true,\n      message: i18n.t('validator.at_least_one_option'),\n    };\n  },\n\n  // 验证邮箱\n  email(trigger) {\n    return {\n      trigger,\n      type: 'email',\n      message: i18n.t('validator.invalid_email'),\n    };\n  },\n\n\n  // 正数、负数、和小数\n  number() {\n    return {\n      pattern: /^(-|\\+)?\\d+(\\.\\d+)?$/,\n      message: i18n.t('validator.must_be_num'),\n    };\n  },\n  // 正整数\n  numberPositive() {\n    return {\n      pattern: /^((0\\.\\d+)|([1-9]\\d*\\.\\d+)|([1-9]+\\d*))$/,\n      message: i18n.t('validator.num_positive'),\n    };\n  },\n  // 非零的正整数\n  numberNatural() {\n    return {\n      pattern: /^[1-9]+$/,\n      message: i18n.t('validator.num_natural'),\n    };\n  },\n  // 正整数\n  integerPositive() {\n    return {\n      pattern: /^[0-9]+$/,\n      message: i18n.t('validator.integer_positive'),\n    };\n  },\n\n\n  // 不能包含特殊字符（除字母和数字外）\n  charTypeWithNormal(message = i18n.t('validator.not_special_char')) {\n    return {\n      pattern: /^[\\u4E00-\\u9FA5A-Za-z0-9_]+$/,\n      message,\n    };\n  },\n\n  // 不能包含特殊字符（除字母和数字@外）\n  charTypeWithoutEmail() {\n    return {\n      pattern: /^[\\u4E00-\\u9FA5A-Za-z0-9_@.]+$/,\n      message: i18n.t('validator.not_special_char'),\n    };\n  },\n\n\n  //\n  numberAndAlphabet() {\n    return {\n      pattern: /^(?![^a-zA-Z]+$)(?![^_]+$)|^(?![^a-zA-Z]+$)(?!\\D+$)/,\n      message: i18n.t('validator.num_and_alpha'),\n    };\n  },\n\n  numAlphabetUnderscore() {\n    return {\n      pattern: /(?:\\d.*_)|(?:_.*\\d)|(?:[A-Za-z].*_)|(?:_.*[A-Za-z])|(?:[A-Za-z].*\\d)|(?:\\d.*[A-Za-z])/,\n      message: i18n.t('validator.num_alpha_underscore'),\n    };\n  },\n\n  // 字符长度在一定区间内\n  charLength(min = 0, max = 0) {\n    return validator2ElemRule(validator.strLength, {\n      min,\n      max,\n    });\n  },\n\n  // 检验两次密码是否相同\n  passwordConfirm(password) {\n    return validator2ElemRule(validator.checkPasswordRepeat, {\n      password,\n    });\n  },\n\n\n  phone: () => ({\n    pattern: /^[0-9-\\s]{6,30}$/,\n    message: i18n.t('validator.invalid_phone'),\n  }),\n\n  mobilePhoneChina: () => ({\n    pattern: /^1(3|4|5|6|7|8|9)\\d{9}$/,\n    message: i18n.t('validator.invalid_phone'),\n  }),\n\n\n  // 字符长度在一定区间内\n  charLengthRange: (min = 1, max = 2) => {\n    return [\n\n      {\n        min,\n        message: i18n.t('validator.under_min_char_count', { min }),\n      },\n      {\n        max,\n        message: i18n.t('validator.exceeds_char_limit', { len: max }),\n      },\n    ];\n  },\n  // 字符最少长度\n  charLengthMini: (min) => ({\n    min,\n    message: i18n.t('validator.under_min_char_count', { min }),\n  }),\n  // 字符最少长度\n  charLengthMax: (max) => ({\n    max,\n    message: i18n.t('validator.exceeds_char_limit', { len: max }),\n  }),\n\n  // 包含中文、大小字母、数字、下划线、空格\n  charTypeNormal() {\n    return {\n      pattern: /^[\\u4E00-\\u9FA5A-Za-z0-9_\\s]+$/,\n      message: i18n.t('validator.not_special_char'),\n    };\n  },\n  // 包含中文、大小字母、数字、空格\n  charTypeNormal1() {\n    return {\n      pattern: /^[\\u4E00-\\u9FA5A-Za-z0-9\\s]+$/,\n      message: i18n.t('validator.not_special_char'),\n    };\n  },\n  // 由任意字符组成，不能为纯数字或纯字母\n  charTypeNotOnlyDigitOrLatin() {\n    return {\n      pattern: /^(?![0-9]+$)(?![a-zA-Z]+$).+$/,\n      message: i18n.t('validator.not_only_digit_letter'),\n    };\n  },\n  // 由数字和字母组成，并且要同时含有数字和字母\n  charTypeDigitAndLatin() {\n    return {\n      pattern: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]+$/,\n      message: i18n.t('validator.must_digit_letter'),\n    };\n  },\n  // 由数字和字母组成，并且要同时含有数字和字母\n  charTypeDigitOrLatin() {\n    return {\n      pattern: /^[a-zA-Z0-9]+$/,\n      message: i18n.t('validator.only_digit_letter'),\n    };\n  },\n  // 由数字和-组成\n  charTypeDigitAndHyphen() {\n    return {\n      pattern: /^[0-9-]+$/,\n      message: i18n.t('validator.only_digit_hyphen'),\n    };\n  },\n};\n\nObject.keys(roleGenerator).forEach(key => {\n  roleGenerator[`validate${key.charAt(0).toUpperCase()}${key.substr(1)}`] = roleGenerator[key];\n});\n\nexport default roleGenerator;\n"],"sourceRoot":""}