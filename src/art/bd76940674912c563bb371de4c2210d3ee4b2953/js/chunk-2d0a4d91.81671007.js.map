{"version":3,"sources":["webpack:///./src/views/supplier-backend/components/HForm/utils.ts"],"names":["getClosetScrollEl","el","scrollHeight","clientHeight","parentElement","focus","offsetTop","HTMLElement","includes","tagName","scrollEl","scrollTo","unFalsy","_value","resetParams","formItems","params","item","type","key","multiple","childType","defaultValue","value","undefined","form2params","showFormItems","filter","show"],"mappings":"+UAMMA,EAAoB,SAApBA,EAAqBC,GAAmC,IACpDC,EAA+BD,EAA/BC,aAAcC,EAAiBF,EAAjBE,aACtB,OAAID,EAAeC,EACVF,EAELA,EAAGG,cACEJ,EAAkBC,EAAGG,eAEvB,MAIH,SAAUC,EAAMJ,GAA0B,IAAbK,EAAa,uDAAD,EAC7C,GAAIL,aAAc,aAChBA,EAAGI,OAASJ,EAAGI,aAGjB,GAAIJ,aAAcM,YAEhB,GAAI,CAAC,QAAS,WAAY,UAAUC,SAASP,EAAGQ,SAC9CR,EAAGI,YACE,CACL,IAAMK,EAAWV,EAAkBC,GAE/BS,GACFA,EAASC,SAAS,EAAGV,EAAGK,UAAYA,IAKrC,IAAMM,EAAU,SAACC,GAAD,OAAgBA,GAAqB,IAAXA,GAEpCC,EAAc,SAACC,GAC1B,IADiD,EAC3CC,EAAa,GAD8B,iBAG9BD,GAH8B,IAGjD,2BAA8B,KAAnBE,EAAmB,QAC5B,OAAQA,EAAKC,MACX,IAAK,QACL,QACEF,EAAOC,EAAKE,KAAO,GACnB,MACF,IAAK,SACHH,EAAOC,EAAKE,KAAOF,EAAKG,SAAW,GAAK,GACxC,MACF,IAAK,OACH,OAAQH,EAAKI,WACX,IAAK,YACL,IAAK,gBACHL,EAAOC,EAAKE,KAAO,GACnB,MACF,QACEH,EAAOC,EAAKE,KAAO,GACnB,MAEJ,MACF,IAAK,WACHH,EAAOC,EAAKE,KAAO,GACnB,MACF,IAAK,SACHH,EAAOC,EAAKE,MAAO,EACnB,MACF,IAAK,QACH,MAEJ,IAAMG,EAAeL,EAAKM,WACLC,IAAjBF,IAA4BN,EAAOC,EAAKE,KAAOG,IAjCJ,8BAmCjD,OAAON,GAGIS,EAAc,SAACV,GAC1B,IAAMW,EAAgBX,EAAUY,QAAO,SAAAV,GACrC,OAAqB,IAAdA,EAAKW,QAEd,OAAOd,EAAYY","file":"js/chunk-2d0a4d91.81671007.js","sourcesContent":["import Vue from 'vue';\nimport { FormItems, Obj } from './type';\n\ntype FocusComp = Vue & { focus?:Function };\ntype FocusEl = HTMLElement & { focus?:Function };\ntype FocusObj = FocusComp | FocusEl;\nconst getClosetScrollEl = (el:HTMLElement):HTMLElement|null => {\n  const { scrollHeight, clientHeight } = el;\n  if (scrollHeight > clientHeight) {\n    return el;\n  }\n  if (el.parentElement) {\n    return getClosetScrollEl(el.parentElement);\n  }\n  return null;\n};\nexport function focus(el:FocusComp, offsetTop:number):void;\nexport function focus(el:FocusEl, offsetTop:number):void;\nexport function focus(el:FocusObj, offsetTop = 0):void {\n  if (el instanceof Vue) {\n    el.focus && el.focus();\n    return;\n  }\n  if (el instanceof HTMLElement) {\n    // 只写这几种先\n    if (['INPUT', 'TEXTAREA', 'SELECT'].includes(el.tagName)) {\n      el.focus();\n    } else {\n      const scrollEl = getClosetScrollEl(el);\n\n      if (scrollEl) {\n        scrollEl.scrollTo(0, el.offsetTop + offsetTop);\n      }\n    }\n  }\n}\nexport const unFalsy = (_value:any) => _value || _value === 0;\n\nexport const resetParams = (formItems:FormItems) => {\n  const params:Obj = {};\n  // eslint-disable-next-line no-restricted-syntax\n  for (const item of formItems) {\n    switch (item.type) {\n      case 'input':\n      default:\n        params[item.key] = '';\n        break;\n      case 'select':\n        params[item.key] = item.multiple ? [] : '';\n        break;\n      case 'date':\n        switch (item.childType) {\n          case 'daterange':\n          case 'datetimerange':\n            params[item.key] = [];\n            break;\n          default:\n            params[item.key] = '';\n            break;\n        }\n        break;\n      case 'checkbox':\n        params[item.key] = [];\n        break;\n      case 'switch':\n        params[item.key] = false;\n        break;\n      case 'block':\n        break;\n    }\n    const defaultValue = item.value;\n    if (defaultValue !== undefined) params[item.key] = defaultValue;\n  }\n  return params;\n};\n\nexport const form2params = (formItems:FormItems) => {\n  const showFormItems = formItems.filter(item => {\n    return item.show !== false;\n  });\n  return resetParams(showFormItems);\n};\n"],"sourceRoot":""}