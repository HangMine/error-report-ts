{"version":3,"sources":["webpack:///./src/views/test/Home/useListDrag.ts"],"names":["useListDrag","state","listStartIndex","listEnterIndex","listDraging","swap","list","start","end","startItem","splice","listDragReset","listDragStart","e","i","listDragEnter","listDragEnd"],"mappings":"yMAKaA,EAAc,WACzB,IAAMC,EAAQ,sBAAS,CACrBC,gBAAiB,EACjBC,gBAAiB,EACjBC,aAAa,IAETC,EAAO,SAACC,EAAYC,EAAcC,GACtC,GAAID,IAAUC,EAAd,CACA,IAAMC,EAAYH,EAAKI,OAAOH,EAAO,GAAG,GACxCD,EAAKI,OAAOF,EAAK,EAAGC,GACpBR,EAAMC,eAAiBM,IAEnBG,EAAgB,WACpBV,EAAMC,gBAAkB,EACxBD,EAAME,gBAAkB,EACxBF,EAAMG,aAAc,GAEhBQ,EAAgB,SAAC,GAAoC,EAAlCC,EAAkC,IAA/BC,EAA+B,EAA/BA,EAC1Bb,EAAMC,eAAiBY,EACvBb,EAAMG,aAAc,GAEhBW,EAAgB,SAAC,GAAuC,IAArCD,EAAqC,EAArCA,EAAGR,EAAkC,EAAlCA,KAClBJ,EAAmCD,EAAnCC,eAAmCD,EAAnBE,eACpBF,EAAME,iBAAmBW,IAC7Bb,EAAME,eAAiBW,EAEvBT,EAAKC,EAAMJ,EAAgBY,KAEvBE,EAAc,WAElBL,KAEF,wCACK,oBAAOV,IADZ,IAEEW,gBACAI,cACAD","file":"js/chunk-2d21e949.9df02d03.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport {\n  reactive, computed, ref, toRefs, getCurrentInstance, onMounted, watch, SetupContext,\n} from '@vue/composition-api';\n\nexport const useListDrag = () => {\n  const state = reactive({\n    listStartIndex: -1,\n    listEnterIndex: -1,\n    listDraging: false,\n  });\n  const swap = (list:any[], start:number, end:number) => {\n    if (start === end) return;\n    const startItem = list.splice(start, 1)[0];\n    list.splice(end, 0, startItem);\n    state.listStartIndex = end;\n  };\n  const listDragReset = () => {\n    state.listStartIndex = -1;\n    state.listEnterIndex = -1;\n    state.listDraging = false;\n  };\n  const listDragStart = ({ e, i }:{e:DragEvent, i:number}) => {\n    state.listStartIndex = i;\n    state.listDraging = true;\n  };\n  const listDragEnter = ({ i, list }:{ i:number, list:any[]}) => {\n    const { listStartIndex, listEnterIndex } = state;\n    if (state.listEnterIndex === i) return;\n    state.listEnterIndex = i;\n    // 内部拖拽\n    swap(list, listStartIndex, i);\n  };\n  const listDragEnd = () => {\n    // dragend事件触发在dragstart的元素上，即初始拖动的组件上，所以这里如果抛出_this是初始组件的vm(要获取end时的vm在enter时获取保存)\n    listDragReset();\n  };\n  return {\n    ...toRefs(state),\n    listDragStart,\n    listDragEnd,\n    listDragEnter,\n  };\n};\n"],"sourceRoot":""}