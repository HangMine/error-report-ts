{"version":3,"sources":["webpack:///./src/views/supplier-backend/components/HTable/utils.ts","webpack:///./src/views/supplier-backend/components/HTable/uses/useCellClick.ts"],"names":["_toString","Object","prototype","toString","toRawType","value","call","slice","getInitValue","type","Date","getInitObj","originObj","preValueObj","obj","entries","key","hasOwnProperty","deepCopy","cache","hit","filter","c","original","copy","Array","isArray","push","keys","forEach","getPx","num","val","textarea","document","createElement","body","appendChild","select","execCommand","parentNode","removeChild","getColumnKeys","column","children","helper","arr","item","useCellClick","refs","cellClick","row","cell","e","target","tagName","cellText","property","name","handleHeaderFooterClick","parentElement","classList","contains","textContent","headerFooterClick","table","$el","addEventListener","removeEventListener"],"mappings":"siBAEMA,EAAYC,OAAOC,UAAUC,SACtBC,EAAY,SAACC,GAAD,OAAeL,EAAUM,KAAKD,GAAOE,MAAM,GAAI,IAG3DC,EAAe,SAACH,GAC3B,IAAMI,EAAOL,EAAUC,GACvB,OAAQI,GACN,IAAK,QACH,MAAO,GACT,IAAK,SACH,MAAO,GACT,IAAK,OACH,OAAO,IAAIC,KACb,IAAK,SACH,OAAO,EACT,IAAK,OACL,IAAK,YACL,IAAK,WACH,OAAOL,EACT,QACE,MAAO,KAIAM,EAAa,WAGxB,IAHqE,IAA5CC,EAA4C,uDAA5B,GAAIC,EAAwB,uDAAN,GACzDC,EAAU,GAEhB,MAA2Bb,OAAOc,QAAQH,GAA1C,eAAsD,8BAA1CI,EAA0C,KAArCX,EAAqC,KAEpDS,EAAIE,GAAOH,EAAYI,eAAeD,GAAOH,EAAYG,GAAOR,EAAaH,GAE/E,OAAOS,GASII,EAAW,SAAXA,EAAYJ,GAAkD,IAAzCK,EAAyC,uDAAN,GACnE,GAAY,OAARL,GAA+B,WAAf,eAAOA,GACzB,OAAOA,EAET,IAAMM,EAAMD,EAAME,QAAO,SAAAC,GAAC,OAAIA,EAAEC,WAAaT,KAAK,GAClD,GAAIM,EACF,OAAOA,EAAII,KAEb,IAAMA,EAAWC,MAAMC,QAAQZ,GAAO,GAAK,GAQ3C,OAPAK,EAAMQ,KAAK,CACTJ,SAAUT,EACVU,SAEFvB,OAAO2B,KAAKd,GAAKe,SAAQ,SAAAb,GACvBQ,EAAKR,GAAOE,EAASJ,EAAIE,GAAMG,MAE1BK,GAQIM,EAAQ,SAACC,GAAD,MAA2C,WAAnB3B,EAAU2B,GAAV,UAAiCA,EAAjC,MAA2CA,GAO3EP,EAAO,SAACQ,GAAc,MAE3BC,EAAWC,SAASC,cAAc,YAKxC,OAJAF,EAAS5B,MAAQ2B,EACjBE,SAASE,KAAKC,YAAYJ,GAC1BA,EAASK,SACTJ,SAASK,YAAY,QACrB,UAAON,EAASO,kBAAhB,aAAO,EAAqBC,YAAYR,IAG7BS,EAAgB,SAACC,GAC5B,IAAKA,EAAOC,SAAU,MAAO,CAACD,EAAO3B,KAErC,IAAMY,EAAgB,GAChBiB,EAAS,SAATA,EAAUC,GAAe,uBAEVA,GAFU,IAE7B,2BAAwB,KAAbC,EAAa,QAClBA,EAAKH,UAAUC,EAAOE,EAAKH,UAC/BhB,EAAKD,KAAKoB,EAAK/B,MAJY,gCAQ/B,OADA6B,EAAOF,EAAOC,UACPhB,I,+ECzFHoB,EAAe,SAAC,GAAyB,IAAvBC,EAAuB,EAAvBA,KAChBC,EAAY,SAACC,EAASR,EAAYS,EAAUC,GAChD,GAA0C,MAArCA,EAAEC,OAAuBC,QAA9B,CACA,IAAMC,EAAWL,EAAIR,EAAOc,UAAUC,MAAQP,EAAIR,EAAOc,UACzD,kBAAKD,KAGDG,EAA0B,SAACN,GAC/B,IAAIC,EAAUD,EAAEC,OAEhB,GADuB,SAAnBA,EAAOC,UAAoBD,EAASA,EAAOM,eAC3CN,EAAOO,UAAUC,SAAS,WAAY,CACxC,IAAMN,EAAWF,EAAOS,YACxB,kBAAKP,KAIHQ,EAAoB,WAAK,MAC7B,iBAAOf,EAAKgB,aAAZ,aAAO,EAAYC,IAAIC,iBAAiB,WAAYR,IAWtD,OARA,wBAAU,WACRK,OAGF,0BAAY,WAAK,MACf,iBAAOf,EAAKgB,aAAZ,aAAO,EAAYC,IAAIE,oBAAoB,UAAWT,MAGjD,CACLT,cAIW","file":"js/chunk-95fb5552.0379fb83.js","sourcesContent":["import { Obj, Column, Columns } from './type';\n\nconst _toString = Object.prototype.toString;\nexport const toRawType = (value:any) => _toString.call(value).slice(8, -1);\n\n// 根据类型设置默认值\nexport const getInitValue = (value:any) => {\n  const type = toRawType(value);\n  switch (type) {\n    case 'Array':\n      return [];\n    case 'Object':\n      return {};\n    case 'Date':\n      return new Date();\n    case 'Number':\n      return 0;\n    case 'Null':\n    case 'Undefined':\n    case 'Function':\n      return value;\n    default:\n      return '';\n  }\n};\n\nexport const getInitObj = (originObj:Obj = {}, preValueObj:Obj = {}) => {\n  const obj:Obj = {};\n  // eslint-disable-next-line no-restricted-syntax\n  for (const [key, value] of Object.entries(originObj)) {\n    // eslint-disable-next-line no-prototype-builtins\n    obj[key] = preValueObj.hasOwnProperty(key) ? preValueObj[key] : getInitValue(value);\n  }\n  return obj;\n};\n\n/**\n * @des: 深复制(es6，不添加原型版本)，需考虑循环引用对象的兼容处理:https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\n * @param {Any} data 需要复制的数据\n * @param {Array} cache 保存已经遍历过的对象，是为了处理循环引用对象\n * @return {Any} 复制后的数据\n */\nexport const deepCopy = (obj:any, cache:{original:Obj, copy:Obj}[] = []) => {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n  const hit = cache.filter(c => c.original === obj)[0];\n  if (hit) {\n    return hit.copy;\n  }\n  const copy:Obj = Array.isArray(obj) ? [] : {};\n  cache.push({\n    original: obj,\n    copy,\n  });\n  Object.keys(obj).forEach(key => {\n    copy[key] = deepCopy(obj[key], cache);\n  });\n  return copy;\n};\n\n/**\n * @description:\n * @param {Number | String} num\n * @return\n */\nexport const getPx = (num:number|string) => (toRawType(num) === 'Number' ? `${num}px` : num);\n\n/**\n * @description: 复制内容到剪贴版\n * @param {String} val 需要复制的内容\n * @return:\n */\nexport const copy = (val:string) => {\n  // 使用textarea才可以换行\n  const textarea = document.createElement('textarea');\n  textarea.value = val;\n  document.body.appendChild(textarea);\n  textarea.select();\n  document.execCommand('Copy');\n  return textarea.parentNode?.removeChild(textarea);\n};\n\nexport const getColumnKeys = (column:Column) => {\n  if (!column.children) return [column.key];\n\n  const keys:string[] = [];\n  const helper = (arr:Columns) => {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const item of arr) {\n      if (item.children) helper(item.children);\n      keys.push(item.key);\n    }\n  };\n  helper(column.children);\n  return keys;\n};\n","import {\n  onMounted, onUnmounted, SetupContext,\n} from '@vue/composition-api';\nimport { copy } from '../utils';\nimport { Obj } from '../type';\n\nconst useCellClick = ({ refs }:SetupContext) => {\n  const cellClick = (row:Obj, column:Obj, cell:any, e:MouseEvent) => {\n    if ((e.target as HTMLElement).tagName === 'I') return; // 如果点击图标则不复制\n    const cellText = row[column.property].name || row[column.property];\n    copy(cellText);\n  };\n\n  const handleHeaderFooterClick = (e:MouseEvent) => {\n    let target = (e.target as HTMLElement);\n    if (target.tagName === 'SPAN') target = target.parentElement!;\n    if (target.classList.contains('is-leaf')) {\n      const cellText = target.textContent;\n      copy(cellText!);\n    }\n  };\n\n  const headerFooterClick = () => {\n    return refs.table?.$el.addEventListener('dblclick', handleHeaderFooterClick);\n  };\n\n  onMounted(() => {\n    headerFooterClick();\n  });\n\n  onUnmounted(() => {\n    return refs.table?.$el.removeEventListener('dbclick', handleHeaderFooterClick);\n  });\n\n  return {\n    cellClick,\n  };\n};\n\nexport default useCellClick;\n"],"sourceRoot":""}