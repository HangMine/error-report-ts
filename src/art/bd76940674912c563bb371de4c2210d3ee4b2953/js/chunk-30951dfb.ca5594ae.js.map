{"version":3,"sources":["webpack:///./src/components/form/whole-form/FormEmailVerifyCodeByStep.vue?77fc","webpack:///./src/components/form/whole-form/FormEmailVerifyCodeByStep.vue?1f73","webpack:///src/components/form/whole-form/FormEmailVerifyCodeByStep.vue","webpack:///./src/components/form/whole-form/FormEmailVerifyCodeByStep.vue?3c4e","webpack:///./src/components/form/whole-form/FormEmailVerifyCodeByStep.vue","webpack:///./src/api/email.js","webpack:///./src/mixins/form-validation.js","webpack:///./src/utils/validators/valid-email.ts","webpack:///./src/api/account-related.js","webpack:///./src/utils/validators/valid-password.ts","webpack:///./src/utils/validators/checkers/is-valid-email.ts","webpack:///./src/router/utils/set-lang.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","staticClass","attrs","form","rules","on","handleFormValidate","nativeOn","$event","preventDefault","type","indexOf","_k","keyCode","key","stopPropagation","onEnter","step","$t","model","value","callback","$$v","$set","trim","expression","$emit","_v","_s","_e","disabledVerify","handleSendCode","backToStep1","email","class","canSendCode","getVerificationCode","seconds","validateForm","submitBtnText","staticRenderFns","name","components","props","mode","String","default","checkScope","showCancelBtn","Boolean","data","emailRules","push","timer","emailCheckResult","verifyCode","beforeDestroy","stopTimer","computed","methods","startTimer","setInterval","clearInterval","component","checkEmailExistent","cancelToken","CancelToken","originAxios","source","req","axios","method","url","params","token","cancel","checkVerificationCodeMatching","ApiResetMail","generateInvitationLink","sendEmailByType","getInviterInfo","inviteId","acceptInvitation","InviteMultipleMembers","sendVerifyCodeByRegistration","lang","headers","sendVerifyCodeByChangingEmail","sendVerifyCodeByResetingPassword","sendVerifyCodeByLogin","mixinValidateForm","Object","keys","forEach","prop","replace","validateFormFields","$refs","console","warn","Error","i18n","t","resetFields","mixinValidateFormField","validateFormField","field","validate","valid","invalidFields","mixinCheckPasswordAsPrevious","validatePasswordConfirm","rule","pass","passwordConfirm","validator","requirement","charLengthMini","handlePasswordChange","validateField","reg","validEmail","test","checkExist","code","dynamicVerifyEmail","options","toLowerCase","message","checkIsMainAccount","account","deleteSubaccountById","ids","targetIds","JSON","stringify","updateSubaccountInfo","axiosEncrypt","disconnectAccountById","id","relateUserId","createVirtualAccount","updateTagsOfVirtualAccount","userId","tags","validPassword","min","max","e","hasNum","hasChar","hasUpperCase","hasLowerCase","score","reduce","total","v","langMapTranslatedLang","en","cn","undefined","setLanguageAndReload","targetLang","window","location","reload","lang2TranslatedLang"],"mappings":"kHAAA,W,qCCAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,UAAU,CAACE,IAAI,OAAOC,YAAY,oBAAoBC,MAAM,CAAC,MAAQR,EAAIS,KAAK,cAAc,GAAG,MAAQT,EAAIU,OAAOC,GAAG,CAAC,SAAWX,EAAIY,oBAAoBC,SAAS,CAAC,OAAS,SAASC,GAAQA,EAAOC,kBAAmB,MAAQ,SAASD,GAAQ,OAAIA,EAAOE,KAAKC,QAAQ,QAAQjB,EAAIkB,GAAGJ,EAAOK,QAAQ,QAAQ,GAAGL,EAAOM,IAAI,SAAkB,MAAON,EAAOO,kBAAyBrB,EAAIsB,QAAQR,OAAW,CAAe,IAAbd,EAAIuB,KAAY,CAACnB,EAAG,eAAe,CAACE,IAAI,gBAAgBE,MAAM,CAAC,KAAO,UAAU,CAACJ,EAAG,WAAW,CAACI,MAAM,CAAC,UAAY,KAAK,YAAcR,EAAIwB,GAAG,4BAA4BC,MAAM,CAACC,MAAO1B,EAAIS,KAAU,MAAEkB,SAAS,SAAUC,GAAM5B,EAAI6B,KAAK7B,EAAIS,KAAM,QAAyB,kBAARmB,EAAkBA,EAAIE,OAAQF,IAAOG,WAAW,iBAAiB,GAAG3B,EAAG,MAAM,CAACG,YAAY,cAAc,CAAEP,EAAiB,cAAEI,EAAG,YAAY,CAACO,GAAG,CAAC,MAAQ,SAASG,GAAQ,OAAOd,EAAIgC,MAAM,aAAa,CAAChC,EAAIiC,GAAGjC,EAAIkC,GAAGlC,EAAIwB,GAAG,4BAA4BxB,EAAImC,KAAK/B,EAAG,YAAY,CAACI,MAAM,CAAC,KAAO,UAAU,SAAWR,EAAIoC,gBAAgBzB,GAAG,CAAC,MAAQX,EAAIqC,iBAAiB,CAACrC,EAAIiC,GAAGjC,EAAIkC,GAAGlC,EAAIwB,GAAG,2CAA2C,IAAI,CAACpB,EAAG,MAAM,CAACA,EAAG,IAAI,CAACG,YAAY,wBAAwBI,GAAG,CAAC,MAAQX,EAAIsC,eAAelC,EAAG,OAAO,CAACJ,EAAIiC,GAAGjC,EAAIkC,GAAGlC,EAAIS,KAAK8B,WAAW,GAAGnC,EAAG,IAAI,CAACG,YAAY,aAAa,CAACP,EAAIiC,GAAG,IAAIjC,EAAIkC,GAAGlC,EAAIwB,GAAG,+BAA+B,KAAKpB,EAAG,IAAI,CAACG,YAAY,aAAaiC,MAAM,CAAE,eAAgBxC,EAAIyC,aAAc9B,GAAG,CAAC,MAAQX,EAAI0C,sBAAsB,CAAC1C,EAAIiC,GAAGjC,EAAIkC,GAAGlC,EAAIwB,GAAG,+BAAgCxB,EAAI2C,QAAU,EAAG,CAAC3C,EAAIiC,GAAG,KAAKjC,EAAIkC,GAAGlC,EAAI2C,SAAS,QAAQ3C,EAAImC,MAAM,GAAG/B,EAAG,eAAe,CAACG,YAAY,iBAAiBC,MAAM,CAAC,KAAO,eAAe,CAACJ,EAAG,WAAW,CAACI,MAAM,CAAC,UAAY,KAAK,YAAcR,EAAIwB,GAAG,uCAAuC,UAAY,IAAIC,MAAM,CAACC,MAAO1B,EAAIS,KAAe,WAAEkB,SAAS,SAAUC,GAAM5B,EAAI6B,KAAK7B,EAAIS,KAAM,aAAcmB,IAAMG,WAAW,sBAAsB,GAAG3B,EAAG,MAAM,CAACG,YAAY,cAAc,CAAEP,EAAiB,cAAEI,EAAG,YAAY,CAACO,GAAG,CAAC,MAAQ,SAASG,GAAQ,OAAOd,EAAIgC,MAAM,aAAa,CAAChC,EAAIiC,GAAGjC,EAAIkC,GAAGlC,EAAIwB,GAAG,4BAA4BxB,EAAImC,KAAK/B,EAAG,YAAY,CAACI,MAAM,CAAC,KAAO,WAAWG,GAAG,CAAC,MAAQX,EAAI4C,eAAe,CAAC5C,EAAIiC,GAAGjC,EAAIkC,GAAGlC,EAAI6C,mBAAmB,KAAK,IAC9uEC,EAAkB,G,8KCmFtB,GACEC,KAAM,4BACNC,WAAY,GAIZC,MAAO,CAELC,KAAM,CACJlC,KAAMmC,OACNC,QAAS,sBAEXC,WAAY,CACVrC,KAAMmC,OACNC,QAAS,mBAEXpC,KAAM,CACJA,KAAMmC,OACNC,QAAS,gBAEXP,cAAe,CACb7B,KAAMmC,OACNC,QAAS,EAAf,4BAEIE,cAAe,CACbtC,KAAMuC,QACNH,SAAS,IAGbI,KA7BF,WA6BA,WACA,GACA,6BACA,wBAEA,kBAYI,MAXkB,uBAAdvD,KAAKiD,MACPO,EAAWC,KACjB,0BAAQ,IAAR,kJACA,UACA,oBAEA,sBAJA,SAKA,0DALA,2CAAQ,OAAR,mDASW,CACLnC,KAAM,EACNoB,QAAS,EACTgB,MAAO,KACPC,kBAAkB,EAClBnD,KAAM,CACJ8B,MAAO,GACPsB,WAAY,IAEdnD,MAAO,CACL6B,MAAOkB,EACPI,WAAY,CAAC,OAArB,OAAqB,CAArB,kBACA,8BADA,IACU,QAAV,aAKEC,cA/DF,WAgEI7D,KAAK8D,aAEPC,SAAU,CAER5B,eAFJ,WAGM,OAAkB,uBAAdnC,KAAKiD,OAAiC,OAAhD,OAAgD,CAAhD,oBACcjD,KAAK2D,kBAGfnB,YAPJ,WAQM,OAAQxC,KAAKmC,gBAAiC,OAAfnC,KAAK0D,QAGxCM,QAAS,CACP,QADJ,SACA,8JACA,6BADA,gCAEA,iBAFA,OAGA,wBAHA,sBAIA,YACA,iBALA,8CAQI,mBATJ,SASA,+JACA,cACA,sBAFA,8CAMI,eAfJ,WAeA,wKACA,iBADA,OAEA,wBAFA,8CAII,oBAnBJ,WAmBA,iKACA,0BADA,iDAKA,OALA,KAMA,OANA,OAOA,iBAPA,OAUA,UAVA,OAaA,aAbA,QAgBA,UAhBA,+BAQA,SARA,mCAWA,SAXA,oCAcA,SAdA,oCAiBA,SAjBA,6BAoBA,SApBA,mCAwBA,qDAxBA,QAyBA,eACA,8DA1BA,sDA4BA,mBACA,2DAEA,oBA/BA,yBAkCA,SAlCA,iFAsCI,aAzDJ,WAyDA,+JAEA,yCACA,8BAHA,SAKA,6BALA,UAOA,kDAPA,sBAQA,oDARA,cAUA,YACA,2BAXA,kBAaA,QAbA,8CAgBIC,WAzEJ,WAyEA,WACMjE,KAAK0C,QAAU,GACf1C,KAAK0D,MAAQQ,aAAY,WAC/B,IAAY,EAAZ,SACUC,cAAc,EAAxB,OACU,EAAV,YAEU,EAAV,YAEA,MAEIL,UApFJ,WAqFMK,cAAcnE,KAAK0D,OACnB1D,KAAK0C,QAAU,EACf1C,KAAK0D,MAAQ,MAEfrB,YAzFJ,WA0FMrC,KAAKsB,KAAO,KC3P+W,I,wBCQ7X8C,EAAY,eACd,EACAtE,EACA+C,GACA,EACA,KACA,WACA,MAIa,OAAAuB,E,6CCnBf,6bAQaC,EAAqB,SAAC/B,GAA4B,IAArBgC,EAAqB,uDAAP,GAC9CC,EAAgBC,IAAhBD,YACFE,EAASF,EAAYE,SACrBC,EAAMC,eAAM,CAChBC,OAAQ,MACRC,IAAK,+BACLC,OAAQ,CAAExC,SACVgC,YAAaG,EAAOM,QAGtB,OADAT,EAAYU,OAASP,EAAOO,OACrBN,GAuBIO,EAAgC,SAAC,GAAgC,IAA9BrB,EAA8B,EAA9BA,WAAYtB,EAAkB,EAAlBA,MAAOvB,EAAW,EAAXA,KACjE,OAAO4D,eAAM,CACXC,OAAQ,OAGRC,IAAK,0BACLtB,KAAM,CAAEK,aAAYtB,QAAOvB,WAKlBmE,EAAe,SAAC3B,GAC3B,OAAOoB,eAAM,CACXC,OAAQ,OACRC,IAAK,+BACLtB,UASS4B,EAAyB,SAAC5B,GACrC,OAAOoB,eAAM,CACXC,OAAQ,OACRC,IAAK,sBACLtB,UAQS6B,EAAkB,SAAC7B,GAC9B,OAAOoB,eAAM,CACXC,OAAQ,OACRC,IAAK,4BACLtB,UAUS8B,EAAiB,SAACC,GAC7B,OAAOX,eAAM,CACXX,QAAS,MACTa,IAAK,0BACLC,OAAQ,CAAEQ,eAKDC,EAAmB,SAAChC,GAC/B,OAAOoB,eAAM,CACXC,OAAQ,OACRC,IAAK,iCACLtB,UAKSiC,EAAwB,SAAAjC,GACnC,OAAOoB,eAAM,CACXC,OAAQ,OACRC,IAAK,gCACLtB,UAUSkC,EAA+B,SAACnD,EAAOoD,GAClD,OAAOf,eAAM,CACXC,OAAQ,OAGRC,IAAK,wBACLtB,KAAM,CACJjB,QACAvB,KAAM,GAER4E,QAAS,CACP,iBAAkBD,MAUXE,EAAgC,SAACtD,GAC5C,OAAOqC,eAAM,CACXC,OAAQ,OAGRC,IAAK,wBACLtB,KAAM,CACJjB,QACAvB,KAAM,MAUC8E,EAAmC,SAACvD,GAC/C,OAAOqC,eAAM,CACXC,OAAQ,OAGRC,IAAK,wBACLtB,KAAM,CACJjB,QACAvB,KAAM,MAUC+E,EAAwB,SAACxD,GACpC,OAAOqC,eAAM,CACXC,OAAQ,OAGRC,IAAK,wBACLtB,KAAM,CACJjB,QACAvB,KAAM,O,sPCxLCgF,EAAoB,CAC/B/B,QAAS,CACDrB,aADC,WACc,+JACnBqD,OAAOC,KAAK,EAAKzF,MAAM0F,SAAQ,SAACC,GACC,kBAApB,EAAK3F,KAAK2F,KAGnB,EAAK3F,KAAK2F,GAAQ,EAAK3F,KAAK2F,GACzBtE,OACAuE,QAAQ,KAAM,QACdA,QAAQ,KAAM,YARF,kBAaXC,eAAmB,EAAKC,MAAM9F,MAbnB,cAcjB,EAAKuB,MAAM,WAAY,EAAKvB,MAdX,kBAeV,EAAKA,MAfK,yCAiBjB+F,QAAQC,KAAR,MACM,IAAIC,MAAMC,OAAKC,EAAE,4BAlBN,4DAqBrBC,YAtBO,WAuBL5G,KAAKsG,MAAM9F,KAAKoG,iBAMTC,EAAyB,CACpC7C,QAAS,CACP8C,kBADO,SACWC,EAAOtF,GAAO,WAC9BzB,KAAKsG,MAAM9F,KAAKwG,UAAS,SAACC,EAAOC,GAE1BA,EAAcH,IAAQ,EAAKhF,MAAM,iBAAkB,CAAEgF,QAAOtF,gBAO5D0F,EAA+B,CAC1C5D,KAD0C,WACnC,WACC6D,EAA0B,SAACC,EAAM5F,EAAOC,GAC5C,OAAID,IAAU,EAAKjB,KAAK8G,KACf5F,EAAS,IAAI+E,MAAMC,OAAKC,EAAE,4BAE5BjF,KAGT,MAAO,CACLlB,KAAM,CACJ8G,KAAM,GACNC,gBAAiB,IAEnB9G,MAAO,CACL8G,gBAAiB,CACfC,OAAUC,cACVD,OAAUE,eAAe,EAAG,IAC5B,CAAEF,UAAWJ,OAKrBpD,QAAS,CAGP2D,qBAHO,WAID3H,KAAKQ,KAAK+G,iBAAiBvH,KAAKsG,MAAM9F,KAAKoH,cAAc,uB,oICpE7DC,EAAM,0JACN,SAAUC,EAAWxF,GACzB,IAAKuF,EAAIE,KAAKzF,GACZ,MAAM,IAAImE,MAAM,OAAKE,EAAE,4B,SAaZqB,E,gGAAf,WAA0B1F,GAA1B,0GAAyCgC,EAAzC,+BAAuD,GAAvD,kBAEU,eAAmBhC,EAAOgC,GAFpC,aAGU,IAAImC,MAAM,OAAKE,EAAE,iCAH3B,sCAKqB,SAAb,KAAIsB,KALZ,qF,wBAWO,SAAeC,EAAtB,oC,8DAAO,WAAkC5F,EAAe6F,GAAjD,wGAAoF7D,EAApF,+BAAkG,GACjGrB,EAASkF,EAATlF,KACDA,IACHA,EAAO,mBAHJ,SAMU,oBAATA,EAND,gCAOK,eAAmBX,EAAM8F,cAAe9D,GAP7C,iCAQiB,eAATrB,EARR,kCASK+E,EAAW1F,EAAM8F,cAAe9D,GATrC,iDAWK,eAAmBhC,EAAM8F,cAAe9D,GAX7C,gEAciB,oDAAhB,KAAI+D,QAdL,uBAeK,IAAI5B,MAAM,OAAKE,EAAE,sCAftB,WAgBwB,uCAAhB,KAAI0B,QAhBZ,uBAiBK,IAAI5B,MAAM,OAAKE,EAAE,kCAjBtB,6E,wBAuBQ,U,oCCvDf,iPASa2B,EAAqB,SAACC,GAA8B,IAArBjE,EAAqB,uDAAP,GAChDC,EAAgBC,IAAhBD,YACFE,EAASF,EAAYE,SACrBC,EAAMC,eAAM,CAChBC,OAAQ,MACRC,IAAK,8BACLC,OAAQ,CACNyD,WAEFjE,YAAaG,EAAOM,QAGtB,OADAT,EAAYU,OAASP,EAAOO,OACrBN,GASI8D,EAAuB,SAACC,GACnC,OAAO9D,eAAM,CACXC,OAAQ,MACRC,IAAK,kCACLc,QAAS,CACP+C,UAAWC,KAAKC,UAAUH,OAWnBI,EAAuB,SAACJ,EAAKlF,GACxC,OAAOuF,eAAa,CAClBlE,OAAQ,OACRC,IAAK,uCACLc,QAAS,CACP+C,UAAWC,KAAKC,UAAUH,IAE5BlF,UAUSwF,EAAwB,SAACC,GACpC,OAAOrE,eAAM,CACXC,OAAQ,MACRC,IAAK,kCACLC,OAAQ,CACNmE,aAAcD,MAYPE,EAAuB,SAAC3F,GACnC,OAAOuF,eAAa,CAClBlE,OAAQ,OACRC,IAAK,+BACLtB,UAUS4F,EAA6B,SAACC,EAAQC,GACjD,OAAO1E,eAAM,CACXC,OAAQ,OACRC,IAAK,mCACLtB,KAAM,CACJ6F,SACAC,Y,mGCjGA,SAAUC,EAAchC,GAK5B,GAAKA,EAAL,CAOA,IACE,eAAUA,EAAM,CAAEiC,IAAK,EAAGC,IAAK,KAC/B,MAAOC,GACP,MAAM,IAAIhD,MAAM,OAAKE,EAAE,kCAAmC,CAAE4C,IAAK,EAAGC,IAAK,MAS3E,GAAI,iDAAiDzB,KAAKT,GACxD,MAAM,IAAIb,MAAM,OAAKE,EAAE,mCAIzB,IAAM+C,EAAS,KAAK3B,KAAKT,GACnBqC,EAAU,uCAAuC5B,KAAKT,GACtDsC,EAAe,QAAQ7B,KAAKT,GAC5BuC,EAAe,QAAQ9B,KAAKT,GAC5BwC,EAAQ,CAACJ,EAAQC,EAASC,EAAcC,GAAcE,QAAQ,SAACC,EAAOC,GAAR,OAAcD,GAASC,EAAI,EAAI,KAAK,GAExG,GAAIH,EAAQ,EACV,MAAM,IAAIrD,MAAM,OAAKE,EAAE,iCAIZ,U,kCC3Cf,4BAGe,sBAAkB,S,+NCCjC,IAMMuD,EAAwB,CAC5BC,GAAI,UACJC,GAAI,qBACJC,UAAW,WASN,SAAeC,EAAtB,kC,8DAAO,WAAoCC,GAApC,0GAA0D7I,EAA1D,+BAAqE,kBAAM8I,OAAOC,SAASC,UAA3F,SACC,eAAQH,GADT,OAEL7I,IAFK,2C,wBAID,SAAUiJ,EAAoBjF,GAClC,OACEwE,EAAsBxE,IACnBwE,EAAsBG,UAId","file":"js/chunk-30951dfb.ca5594ae.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormEmailVerifyCodeByStep.vue?vue&type=style&index=0&id=f8d10822&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-form',{ref:\"form\",staticClass:\"form-verify-email\",attrs:{\"model\":_vm.form,\"status-icon\":\"\",\"rules\":_vm.rules},on:{\"validate\":_vm.handleFormValidate},nativeOn:{\"submit\":function($event){$event.preventDefault();},\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }$event.stopPropagation();return _vm.onEnter($event)}}},[(_vm.step === 1)?[_c('el-form-item',{ref:\"emailFormItem\",attrs:{\"prop\":\"email\"}},[_c('el-input',{attrs:{\"maxlength\":\"46\",\"placeholder\":_vm.$t('public.form.enter_email')},model:{value:(_vm.form.email),callback:function ($$v) {_vm.$set(_vm.form, \"email\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.email\"}})],1),_c('div',{staticClass:\"button-bar\"},[(_vm.showCancelBtn)?_c('el-button',{on:{\"click\":function($event){return _vm.$emit('cancel')}}},[_vm._v(_vm._s(_vm.$t('public.dialog.cancel')))]):_vm._e(),_c('el-button',{attrs:{\"type\":\"primary\",\"disabled\":_vm.disabledVerify},on:{\"click\":_vm.handleSendCode}},[_vm._v(_vm._s(_vm.$t('public.form.send_verification_code')))])],1)]:[_c('div',[_c('i',{staticClass:\"back-btn el-icon-back\",on:{\"click\":_vm.backToStep1}}),_c('font',[_vm._v(_vm._s(_vm.form.email))])],1),_c('p',{staticClass:\"sent-tips\"},[_vm._v(\" \"+_vm._s(_vm.$t('public.form.code_sent_tips'))+\" \"),_c('a',{staticClass:\"resend-btn\",class:{ 'is-disabled': !_vm.canSendCode },on:{\"click\":_vm.getVerificationCode}},[_vm._v(_vm._s(_vm.$t('public.form.resend_code')))]),(_vm.seconds > 0)?[_vm._v(\" (\"+_vm._s(_vm.seconds)+\"s) \")]:_vm._e()],2),_c('el-form-item',{staticClass:\"form-code-line\",attrs:{\"prop\":\"verifyCode\"}},[_c('el-input',{attrs:{\"maxlength\":\"20\",\"placeholder\":_vm.$t('public.form.enter_verification_code'),\"clearable\":\"\"},model:{value:(_vm.form.verifyCode),callback:function ($$v) {_vm.$set(_vm.form, \"verifyCode\", $$v)},expression:\"form.verifyCode\"}})],1),_c('div',{staticClass:\"button-bar\"},[(_vm.showCancelBtn)?_c('el-button',{on:{\"click\":function($event){return _vm.$emit('cancel')}}},[_vm._v(_vm._s(_vm.$t('public.dialog.cancel')))]):_vm._e(),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.validateForm}},[_vm._v(_vm._s(_vm.submitBtnText))])],1)]],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <el-form :model=\"form\" status-icon :rules=\"rules\" @submit.native.prevent\n    @keyup.enter.native.stop=\"onEnter\"\n    @validate=\"handleFormValidate\"\n    class=\"form-verify-email\" ref=\"form\">\n    <template v-if=\"step === 1\">\n      <el-form-item prop=\"email\" ref=\"emailFormItem\">\n        <!-- 邮箱动态校验组件 -->\n        <!-- <dynamic-validate-email\n          v-if=\"mode === 'dynamicVerifyEmail'\"\n          :placeholder=\"$t('public.form.enter_email')\"\n          :mode=\"checkScope\"\n          :email=\"form.email\"\n          @validate=\"handleValidateEmail\" /> -->\n\n        <el-input\n          v-model.trim=\"form.email\"\n          maxlength=\"46\"\n          :placeholder=\"$t('public.form.enter_email')\" />\n\n      </el-form-item>\n\n      <!-- 倒计时按钮 -->\n      <!-- <base-count-down-button\n        :disabled=\"disabledVerify\"\n        :default-content=\"$t('public.form.send_verification_code')\"\n        :sended-content=\"$t('public.form.reacqire')\"\n        class=\"count-down-button\"\n        @send=\"getVerificationCode\" /> -->\n\n      <div class=\"button-bar\">\n        <el-button v-if=\"showCancelBtn\" @click=\"$emit('cancel')\">{{ $t('public.dialog.cancel') }}</el-button>\n        <el-button type=\"primary\" :disabled=\"disabledVerify\" @click=\"handleSendCode\">{{ $t('public.form.send_verification_code') }}</el-button>\n      </div>\n    </template>\n    <template v-else>\n      <div>\n        <i class=\"back-btn el-icon-back\" @click=\"backToStep1\"></i>\n        <font>{{ form.email }}</font>\n      </div>\n      <p class=\"sent-tips\">\n        {{ $t('public.form.code_sent_tips') }}\n        <a class=\"resend-btn\" :class=\"{ 'is-disabled': !canSendCode }\"\n          @click=\"getVerificationCode\">{{ $t('public.form.resend_code') }}</a>\n        <template v-if=\"seconds > 0\">\n          ({{seconds}}s)\n        </template>\n      </p>\n      <el-form-item prop=\"verifyCode\" class=\"form-code-line\">\n        <!-- 二维码输入框 -->\n        <el-input\n          v-model=\"form.verifyCode\"\n          maxlength=\"20\"\n          :placeholder=\"$t('public.form.enter_verification_code')\"\n          clearable />\n      </el-form-item>\n\n      <div class=\"button-bar\">\n        <el-button v-if=\"showCancelBtn\" @click=\"$emit('cancel')\">{{ $t('public.dialog.cancel') }}</el-button>\n        <el-button type=\"primary\" @click=\"validateForm\">{{ submitBtnText }}</el-button>\n      </div>\n    </template>\n\n  </el-form>\n</template>\n\n<script>\nimport i18n from 'i18next';\n// import DynamicValidateEmail from '@/components/form/dynamic-validation/DynamicValidateEmail';\n// import BaseCountDownButton from '@/components/base/CountDownButton';\n\nimport {\n  sendVerifyCodeByRegistration,\n  sendVerifyCodeByChangingEmail,\n  sendVerifyCodeByResetingPassword,\n  sendVerifyCodeByLogin,\n} from '@/api/email';\nimport { defaultLang } from '@/i18n';\nimport { langMapLangNum } from '@/router/utils/set-lang';\nimport formValidation, { validateFormFields } from '@/utils/validators/rules-validation';\nimport validEmail from '@/utils/validators/checkers/is-valid-email';\nimport { dynamicVerifyEmail } from '@/utils/validators/valid-email';\nimport validator2ElemRule from '@/utils/validators/utils/validator-to-elem-rule';\n\nexport default {\n  name: 'FormEmailVerifyCodeByStep',\n  components: {\n    // DynamicValidateEmail,\n    // BaseCountDownButton,\n  },\n  props: {\n    // 该组件类型 dynamicVerifyEmail / defaultVerifyEmail\n    mode: {\n      type: String,\n      default: 'defaultVerifyEmail',\n    },\n    checkScope: {\n      type: String,\n      default: 'checkAllAccount',\n    },\n    type: {\n      type: String,\n      default: 'registration',\n    },\n    submitBtnText: {\n      type: String,\n      default: i18n.t('public.form.next'),\n    },\n    showCancelBtn: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    const emailRules = [\n      formValidation.validateRequirement(),\n      formValidation.validateEmail(),\n    ];\n    const cancelToken = { cancel: undefined };\n    if (this.mode === 'dynamicVerifyEmail') {\n      emailRules.push(\n        validator2ElemRule(async (email, options) => {\n          if (cancelToken.cancel) {\n            cancelToken.cancel('正在校验...');\n          }\n          this.emailCheckResult = false;\n          await dynamicVerifyEmail(email, { mode: this.checkScope, ...options }, cancelToken);\n        }),\n      );\n    }\n    return {\n      step: 1, // 校验步骤 1：发送验证码；2：输入验证码\n      seconds: 0, // 重新发送验证码倒计时\n      timer: null, // 计时器\n      emailCheckResult: false, // 邮箱动态检查结果\n      form: {\n        email: '',\n        verifyCode: '',\n      },\n      rules: {\n        email: emailRules,\n        verifyCode: [\n          { ...formValidation.validateRequirement(), trigger: 'blur' },\n        ],\n      },\n    };\n  },\n  beforeDestroy() {\n    this.stopTimer();\n  },\n  computed: {\n    /** @return { boolean } */\n    disabledVerify() {\n      if (this.mode !== 'dynamicVerifyEmail' && validEmail(this.form.email)) return false;\n      return !this.emailCheckResult;\n    },\n    /** @return { boolean } */\n    canSendCode() {\n      return !this.disabledVerify && this.timer === null;\n    },\n  },\n  methods: {\n    async onEnter(e) {\n      if (!this.disabledVerify && this.step === 1) {\n        await this.validateForm();\n        this.getVerificationCode();\n      } else if (this.step === 2) {\n        this.validateForm();\n      }\n    },\n    async handleFormValidate(prop, isValidated, err) {\n      if (prop === 'email') {\n        this.emailCheckResult = isValidated;\n      }\n    },\n    // 发送验证码到邮箱\n    async handleSendCode() {\n      await this.validateForm();\n      this.getVerificationCode();\n    },\n    async getVerificationCode() {\n      if (this.step === 2 && !this.canSendCode) {\n        // this.$message.warning(i18n.t('public.form.send_code_warn'));\n        return;\n      }\n      let matchApi = null;\n      switch (this.type) {\n        case 'registration':\n          matchApi = sendVerifyCodeByRegistration;\n          break;\n        case 'email':\n          matchApi = sendVerifyCodeByChangingEmail;\n          break;\n        case 'password':\n          matchApi = sendVerifyCodeByResetingPassword;\n          break;\n        case 'login':\n          matchApi = sendVerifyCodeByLogin;\n          break;\n        default:\n          matchApi = sendVerifyCodeByRegistration;\n      }\n\n      try {\n        await matchApi(this.form.email.toLowerCase(), langMapLangNum(defaultLang));\n        this.startTimer();\n        this.$message.success(i18n.t('public.form.send_code_success'));\n      } catch (err) {\n        if (err.code === 131014) {\n          this.$message.warning(i18n.t('public.form.send_code_warn'));\n        } else {\n          this.$errHandler(err);\n        }\n      } finally {\n        this.step = 2;\n      }\n    },\n    // 提交表单（触发validate事件通知到父组件）\n    async validateForm() {\n      // trim所有的 from\n      Object.keys(this.form).forEach((prop) => {\n        this.form[prop] = this.form[prop].trim();\n      });\n      await validateFormFields(this.$refs.form);\n      // 账号和邮箱重复时，无法提交表达\n      if (this.mode === 'dynamicVerifyEmail' && !this.emailCheckResult) {\n        throw new this.$Error(i18n.t('public.form.invalid_email'));\n      }\n      if (this.step === 2) {\n        this.$emit('validate', this.form);\n      }\n      return this.form;\n    },\n\n    startTimer() {\n      this.seconds = 60;\n      this.timer = setInterval(() => {\n        if (this.seconds === 0) {\n          clearInterval(this.timer);\n          this.timer = null;\n        } else {\n          this.seconds--;\n        }\n      }, 1000);\n    },\n    stopTimer() {\n      clearInterval(this.timer);\n      this.seconds = 0;\n      this.timer = null;\n    },\n    backToStep1() {\n      this.step = 1;\n      // this.stopTimer();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.form-verify-email {\n  /deep/ .form-code-line .el-form-item__content {\n    display: flex;\n  }\n  .el-button {\n    border-radius: 20px;\n\n    &.is-disabled {\n      color: #fff;\n      background: rgba(40, 120, 255, 0.3);\n      border: none;\n    }\n  }\n  // .verify-code-input {\n  //   width: 200px;\n  //   margin-right: 10px;\n  // }\n  // .count-down-button {\n  //   width: 150px;\n  // }\n  .button-bar {\n    display: flex;\n    margin-top: 10px;\n    width: 100%;\n    .el-button {\n      flex-grow: 1;\n    }\n  }\n  .back-btn {\n    margin-right: 8px;\n    width: 18px;\n    height: 18px;\n    line-height: 18px;\n    text-align: center;\n    background: #e6e6e6;\n    color: #666;\n    border-radius: 50%;\n    cursor: pointer;\n  }\n  .sent-tips {\n    margin: 10px 0;\n    line-height: 20px;\n    color: #999;\n    font-size: 13px;\n  }\n  .resend-btn {\n    text-decoration: underline;\n    color: #2878ff;\n    cursor: pointer;\n    &.is-disabled {\n      color: #999;\n      cursor: no-drop;\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormEmailVerifyCodeByStep.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormEmailVerifyCodeByStep.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FormEmailVerifyCodeByStep.vue?vue&type=template&id=f8d10822&scoped=true&\"\nimport script from \"./FormEmailVerifyCodeByStep.vue?vue&type=script&lang=js&\"\nexport * from \"./FormEmailVerifyCodeByStep.vue?vue&type=script&lang=js&\"\nimport style0 from \"./FormEmailVerifyCodeByStep.vue?vue&type=style&index=0&id=f8d10822&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f8d10822\",\n  null\n  \n)\n\nexport default component.exports","import originAxios from 'axios';\nimport axios from './axios';\n\n/**\n * 校验邮箱是否已注册\n * @param {String} email 邮箱地址\n * @returns {Promise}\n */\nexport const checkEmailExistent = (email, cancelToken = {}) => {\n  const { CancelToken } = originAxios;\n  const source = CancelToken.source();\n  const req = axios({\n    method: 'get',\n    url: '/authcenter/user/email/check',\n    params: { email },\n    cancelToken: source.token,\n  });\n  cancelToken.cancel = source.cancel;\n  return req;\n};\n\n/**\n * 通过邮箱获取验证码\n * @param {String} email 邮箱地址\n * @returns {Promise}\n */\n// 已废弃\n// export const getVerifyCodeByEmail = (email) => {\n//   return axios({\n//     method: 'post',\n//     url: '/authcenter/user/email/verify/code',\n//     data: { email },\n//   });\n// };\n\n/**\n * 校验邮箱验证码是否匹配\n * @param {String} verifyCode 验证码\n * @param {String} email 邮箱地址\n * @returns {Promise}\n */\nexport const checkVerificationCodeMatching = ({ verifyCode, email, type }) => {\n  return axios({\n    method: 'post',\n    // url: '/authcenter/user/email/check/code',\n    // params: { verifyCode, email },\n    url: '/authcenter/code/verify',\n    data: { verifyCode, email, type },\n  });\n};\n\n// 重新绑定邮箱\nexport const ApiResetMail = (data) => {\n  return axios({\n    method: 'post',\n    url: '/authcenter/user/email/reset',\n    data,\n  });\n};\n\n/**\n * 生成邀请链接\n * @param {Object} data type(邮件类型)：1：关联外部人员到公司邀请邮件，2：关联外部人员到workspace\n * @returns {Promise}\n */\nexport const generateInvitationLink = (data) => {\n  return axios({\n    method: 'post',\n    url: '/msgcenter/mail/url',\n    data,\n  });\n};\n/**\n * 发送邮件接口\n * @param {Object} data type(邮件类型)：1：关联外部人员到公司邀请邮件，2：关联外部人员到workspace，3”：新增人员发送通知邮件\n * @returns {Promise}\n */\nexport const sendEmailByType = (data) => {\n  return axios({\n    method: 'post',\n    url: '/authcenter/ugroup/invite',\n    data,\n  });\n};\n\n/* ===============================  邀请相关 ========================= */\n/**\n * 获取邀请者信息\n * @param {String} inviteId 邀请的ID\n * @returns {Promise}\n */\nexport const getInviterInfo = (inviteId) => {\n  return axios({\n    methods: 'get',\n    url: '/msgcenter/mail/inviter',\n    params: { inviteId },\n  });\n};\n\n// 处理邀请信息\nexport const acceptInvitation = (data) => {\n  return axios({\n    method: 'post',\n    url: '/authcenter/user/account/outer',\n    data,\n  });\n};\n\n// 邀请多人（可新建账号）\nexport const InviteMultipleMembers = data => {\n  return axios({\n    method: 'post',\n    url: '/authcenter/user/batch/invite',\n    data,\n  });\n};\n\n/* =============================== 通过邮箱获取验证码 ========================= */\n/**\n * 注册账号\n * @param {String} email\n * @returns {Promise}\n */\nexport const sendVerifyCodeByRegistration = (email, lang) => {\n  return axios({\n    method: 'post',\n    // url: '/authcenter/user/email/verify/code',\n    // data: { email },\n    url: '/authcenter/code/send',\n    data: {\n      email,\n      type: 1,\n    },\n    headers: {\n      'sdstc-language': lang,\n    },\n  });\n};\n\n/**\n * 修改账号邮箱\n * @param {String} email\n * @returns {Promise}\n */\nexport const sendVerifyCodeByChangingEmail = (email) => {\n  return axios({\n    method: 'post',\n    // url: '/authcenter/user/email/update/code',\n    // data: { email },\n    url: '/authcenter/code/send',\n    data: {\n      email,\n      type: 5,\n    },\n  });\n};\n\n/**\n * 重置账号密码\n * @param {String} email\n * @returns {Promise}\n */\nexport const sendVerifyCodeByResetingPassword = (email) => {\n  return axios({\n    method: 'post',\n    // url: '/authcenter/user/verification/code',\n    // data: { account: email },\n    url: '/authcenter/code/send',\n    data: {\n      email,\n      type: 3,\n    },\n  });\n};\n\n/**\n * 邮箱验证码登录\n * @param {String} email\n * @returns {Promise}\n */\nexport const sendVerifyCodeByLogin = (email) => {\n  return axios({\n    method: 'post',\n    // url: '/authcenter/login/send',\n    // data: { email },\n    url: '/authcenter/code/send',\n    data: {\n      email,\n      type: 2,\n    },\n  });\n};\n","import i18n from 'i18next';\nimport validator, { validateFormFields } from '@/utils/validators/rules-validation';\n\n// 校验表单是否通过校验\nexport const mixinValidateForm = {\n  methods: {\n    async validateForm() {\n      Object.keys(this.form).forEach((prop) => {\n        if (typeof this.form[prop] === 'string') {\n          // 去掉首尾空格\n          // 防止XSS攻击（html方面）\n          this.form[prop] = this.form[prop]\n            .trim()\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n        }\n      });\n\n      try {\n        await validateFormFields(this.$refs.form);\n        this.$emit('validate', this.form);\n        return this.form;\n      } catch (err) {\n        console.warn(err);\n        throw new Error(i18n.t('validator.form_val_fail'));\n      }\n    },\n    resetFields() {\n      this.$refs.form.resetFields();\n    },\n  },\n};\n\n// 校验表单中特定的field有没有通过校验；校验成功，返回其值\nexport const mixinValidateFormField = {\n  methods: {\n    validateFormField(field, value) {\n      this.$refs.form.validate((valid, invalidFields) => {\n        // 判断该属性是否在校验失败的field对象里面，如果校验通过则通知父组件\n        if (!invalidFields[field]) this.$emit('validate-field', { field, value });\n      });\n    },\n  },\n};\n\n// 校验再次输入的密码是否与上一次相同\nexport const mixinCheckPasswordAsPrevious = {\n  data() {\n    const validatePasswordConfirm = (rule, value, callback) => {\n      if (value !== this.form.pass) {\n        return callback(new Error(i18n.t('validator.same_as_prev')));\n      }\n      return callback();\n    };\n\n    return {\n      form: {\n        pass: '',\n        passwordConfirm: '',\n      },\n      rules: {\n        passwordConfirm: [\n          validator.requirement(),\n          validator.charLengthMini(6, 20),\n          { validator: validatePasswordConfirm },\n        ],\n      },\n    };\n  },\n  methods: {\n    // 当密码框输入变化时，要校验密码确认内容\n    // （此监听方法需添加到 password 上）\n    handlePasswordChange() {\n      if (this.form.passwordConfirm) this.$refs.form.validateField('passwordConfirm');\n    },\n  },\n};\n","import { i18n } from '@/i18n';\nimport { checkEmailExistent } from '@/api/email';\nimport { checkIsMainAccount } from '@/api/account-related';\n\n// eslint-disable-next-line\nconst reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport function validEmail(email: string) {\n  if (!reg.test(email)) {\n    throw new Error(i18n.t('validator.invalid_email'));\n  }\n}\n\n\ntype DynamicVerifyEmailOption = {\n  // 检测是否已注册账号 checkAllAccount | checkExist； 检测是否主账号 checkMainAccount\n  // checkAllAccount和checkExist都是调checkEmailExistent接口检测邮箱是否已注册\n  // 区别是前者强调“已被注册的重复账号”，会报错。后者检测是否为“已注册的合法账号”\n  mode: 'checkAllAccount' | 'checkExist' | 'checkMainAccount';\n};\n\n// checkExist模式下改写checkEmailExistent的response信息\nasync function checkExist(email: string, cancelToken = {}) {\n  try {\n    await checkEmailExistent(email, cancelToken);\n    throw new Error(i18n.t('public.form.email_dont_exist'));\n  } catch (err) {\n    if (err.code !== 131003) {\n      throw err;\n    }\n  }\n}\n\nexport async function dynamicVerifyEmail(email: string, options: DynamicVerifyEmailOption, cancelToken = {}) {\n  let { mode } = options;\n  if (!mode) {\n    mode = 'checkAllAccount';\n  }\n  try {\n    if (mode === 'checkAllAccount') {\n      await checkEmailExistent(email.toLowerCase(), cancelToken);\n    } else if (mode === 'checkExist') {\n      await checkExist(email.toLowerCase(), cancelToken);\n    } else {\n      await checkIsMainAccount(email.toLowerCase(), cancelToken);\n    }\n  } catch (err) {\n    if (err.message === 'No permission, please contact the administrator') {\n      throw new Error(i18n.t('public.form.account_no_permission'));\n    } else if (err.message === 'Account information does not exist') {\n      throw new Error(i18n.t('public.form.account_not_exist'));\n    }\n    throw err;\n  }\n}\n\nexport default validEmail;\n","import originAxios from 'axios';\nimport axios, { axiosEncrypt } from '@/utils/axios';\n\n/* ======================= 账号相关 ============================ */\n/**\n * 校验账号是否为主账号或普通账号\n * @param {String} id 账号的id\n * @returns {Promise}\n */\nexport const checkIsMainAccount = (account, cancelToken = {}) => {\n  const { CancelToken } = originAxios;\n  const source = CancelToken.source();\n  const req = axios({\n    method: 'get',\n    url: '/authcenter/user/check/role',\n    params: {\n      account,\n    },\n    cancelToken: source.token,\n  });\n  cancelToken.cancel = source.cancel;\n  return req;\n};\n\n/* ======================= 子账号相关 ============================ */\n/**\n * 删除账号\n * @param {Array} ids 帐号id的数组\n * @returns {Promise}\n */\nexport const deleteSubaccountById = (ids) => {\n  return axios({\n    method: 'get',\n    url: '/authcenter/user/account/delete',\n    headers: {\n      targetIds: JSON.stringify(ids),\n    },\n  });\n};\n\n/**\n * 修改账号信息\n * @param {Array} ids 帐号id的数组\n * @param {Object} data 编辑信息对象\n * @returns {Promise}\n */\nexport const updateSubaccountInfo = (ids, data) => {\n  return axiosEncrypt({\n    method: 'post',\n    url: '/authcenter/user/account/echo/update',\n    headers: {\n      targetIds: JSON.stringify(ids),\n    },\n    data,\n  });\n};\n\n/* ====================== 关联（邀请）账号相关 ====================== */\n/**\n * 解除关联关系（邀请的账号）\n * @param {String} id 删除id\n * @returns {Promise}\n */\nexport const disconnectAccountById = (id) => {\n  return axios({\n    method: 'get',\n    url: '/authcenter/contacts/disconnect',\n    params: {\n      relateUserId: id,\n    },\n  });\n};\n\n\n/* ====================== 虚拟账号相关 ====================== */\n/**\n * 新增虚拟账号\n * @param {Object} data 账号信息对象\n * @returns {Promise}\n */\nexport const createVirtualAccount = (data) => {\n  return axiosEncrypt({\n    method: 'post',\n    url: '/authcenter/user/virtual/add',\n    data,\n  });\n};\n\n/**\n * 更新虚拟账号标签\n * @param {String} userId 账号ID\n * @param {Array} tags 账号标签\n * @returns {Promise}\n */\nexport const updateTagsOfVirtualAccount = (userId, tags) => {\n  return axios({\n    method: 'post',\n    url: '/authcenter/user/virtual/tag/add',\n    data: {\n      userId,\n      tags,\n    },\n  });\n};\n","import { i18n } from '@/i18n';\nimport strLength from '@/utils/validators/str-length';\n\nexport function validPassword(pass: string) {\n  // const reg = /^(?![0-9]+$)(?![a-zA-Z]+$).+$/;\n  // if (!reg.test(pass)) {\n  //   throw new Error(i18n.t('validator.not_only_digit_letter'));\n  // }\n  if (!pass) {\n    return;\n  }\n\n\n  // 1.长度为6-20个字符\n  // strLength(pass, { min: 6, max: 20 });\n  try {\n    strLength(pass, { min: 6, max: 20 });\n  } catch (e) {\n    throw new Error(i18n.t('validator.pass.char_len_between', { min: 6, max: 20 }));\n  }\n\n  // 2.只能输入可见的ASCII字符\n  // new Array(127 - 33).fill(0).map((v, i) => String.fromCharCode(i + 33)).join('')\n  // !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\n  // !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n  // 注意中间一部分需要转义: [\\] => [\\\\\\]\n  // if (/[^`~!@#$%^&*()_\\-+=<>?:\"{}|,./;'\\\\[\\]·~！@#￥%……&*（）——\\-+={}|《》？：“”【】、；‘'，。、A-Za-z0-9]/.test(pass)) {\n  if (/[^!\"#$%&'()*+,-./:;<=>?@[\\\\\\]^_`{|}~A-Za-z0-9]/.test(pass)) {\n    throw new Error(i18n.t('validator.pass.ascii_char_only'));\n  }\n\n  // 3.至少包含数字/字符/大写字母/小写字母中的三种\n  const hasNum = /\\d/.test(pass);\n  const hasChar = /[!\"#$%&'()*+,-./:;<=>?@[\\\\\\]^_`{|}~]/.test(pass);\n  const hasUpperCase = /[A-Z]/.test(pass);\n  const hasLowerCase = /[a-z]/.test(pass);\n  const score = [hasNum, hasChar, hasUpperCase, hasLowerCase].reduce(((total, v) => total + (v ? 1 : 0)), 0);\n  // console.log('score=====', score);\n  if (score < 3) {\n    throw new Error(i18n.t('validator.pass.choose_three'));\n  }\n}\n\nexport default validPassword;\n","import validator2Checker from '@/utils/validators/utils/validator-to-checker';\nimport validEmail from '../valid-email';\n\nexport default validator2Checker(validEmail);\n","import { Language, setLang } from '@/i18n/index';\n\ntype ValueOf<T> = T[keyof T];\n\nconst langNumMapLang = {\n  1: 'en' as 'en',\n  2: 'cn' as 'cn',\n  undefined: 'unknown' as 'unknown',\n};\n\nconst langMapTranslatedLang = {\n  en: 'english',\n  cn: 'simplified_chinese',\n  undefined: 'unknown',\n};\n\nexport {\n  langNumToLang as languageNumber2lang,\n  langToLangNum as langMapLangNum,\n  currentLang as defaultLang,\n  langConfigList,\n} from '@/i18n/index';\nexport async function setLanguageAndReload(targetLang: Language, callback = () => window.location.reload()) {\n  await setLang(targetLang);\n  callback();\n}\nexport function lang2TranslatedLang(lang: typeof langNumMapLang) {\n  return (\n    langMapTranslatedLang[lang as unknown as keyof typeof langMapTranslatedLang]\n    || langMapTranslatedLang.undefined\n  ) as ValueOf<typeof langMapTranslatedLang>;\n}\n\nexport default setLanguageAndReload;\n"],"sourceRoot":""}